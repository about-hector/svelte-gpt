generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    chats         Chat[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Chat {
    id       String    @id @default(cuid())
    user_id  String
    title    String     @default(cuid())
    messages Message[]
    user     User      @relation(fields: [user_id], references: [id], onDelete: NoAction)

    @@index([user_id])
}

model Message {
    id               String   @id @default(cuid())
    openai_unique_id String
    role             Role
    content          String   @db.LongText
    createdAt        DateTime
    chat             Chat?    @relation(fields: [chatId], references: [id], onDelete: SetNull)
    chatId           String?

    @@index([chatId])
}

enum Role {
    system
    user
    assistant
    function
}

// this is because I'm using the same database as another app of mine, so I need to keep the schema
model GroceryItem {
    id          Int     @id @default(autoincrement())
    groceryItem String
    purchased   Boolean
}
